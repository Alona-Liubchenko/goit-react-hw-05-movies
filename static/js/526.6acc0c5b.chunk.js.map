{"version":3,"file":"static/js/526.6acc0c5b.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,GAAAA,IAAA,qCAAwCD,IADpC,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAIbC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,GAAAA,IAAA,gBACZK,EADY,oBACON,EADP,oBADG,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,GAAAA,IAAA,+BACGD,EADH,kBACoBQ,EADpB,+CADG,cACpBL,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAU,mCAAG,WAAMH,GAAN,uFACDL,EAAAA,GAAAA,IAAA,gBACZK,EADY,4BACeN,EADf,oBADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVM,EAAa,mCAAG,WAAMJ,GAAN,uFACJL,EAAAA,GAAAA,IAAA,gBACZK,EADY,4BACeN,EADf,2BADI,cACrBG,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,qD,+KC3BbO,EAAMC,EAAAA,GAAAA,IAAH,wDAGHC,EAAQD,EAAAA,GAAAA,GAAH,6JACH,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IACC,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IACN,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,IAKAC,EAAYT,EAAAA,GAAAA,GAAH,+IAGb,SAAAE,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,IAEG,SAAAN,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,IAGDE,EAAOV,EAAAA,GAAAA,GAAH,+EAIJW,GAAOX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,8GAIC,SAAAE,GAAC,OAAIA,EAAEC,MAAMU,OAAOC,OAAnB,IACN,SAAAZ,GAAC,OAAIA,EAAEC,MAAMU,OAAOE,KAAnB,IAGDC,EAAahB,EAAAA,GAAAA,GAAH,4KACV,SAAAE,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,IAEH,SAAAN,GAAC,OAAIA,EAAEC,MAAMU,OAAOI,IAAnB,IAGG,SAAAf,GAAC,OAAIA,EAAEC,MAAMC,UAAUc,CAAtB,IACC,SAAAhB,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IAELY,EAAQnB,EAAAA,GAAAA,IAAH,wQ,SCQlB,EAtCa,WACX,IAAMoB,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,IAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEwBC,EAAAA,KAFxB,OAEUC,EAFV,OAGIH,EAAUG,EAAMC,SAHpB,gDAKIC,QAAQC,IAAI,SALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,IAEER,EAGL,OACE,UAACxB,EAAD,YACE,SAACE,EAAD,8BACA,SAACQ,EAAD,UACGc,EAAOS,KAAI,SAAAC,GAAK,OACf,SAACvB,EAAD,WACE,UAACC,EAAD,CAAMuB,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMjB,GAA/C,WACE,SAACD,EAAD,CACEmB,IAAG,yCAAoCL,EAAMM,aAC7CC,IAAI,MAEN,SAACxB,EAAD,UAAaiB,EAAMQ,YANZR,EAAME,GADF,QAcxB,C","sources":["components/servises/api.js","pages/Home/Home.styled.js","pages/Home/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '76421f36bc1f2a2420e565e031c0566d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const trendingToDay = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const searchMovies = async search => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${search}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const searchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const searchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Box = styled.div`\n  background-color: #be444475;\n`;\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin: ${p => p.theme.space[5]};\n  text-transform: uppercase;\n  align-items: center;\n  text-align: center;\n`;\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[4]}px;\n  list-style: none;\n  padding: ${p => p.theme.space[0]};\n  justify-content: center;\n`;\nexport const Item = styled.li`\n  flex-basis: calc(100% / 5 - 16px);\n  height: 100%;\n`;\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n\n  &.active {\n    background: ${p => p.theme.colors.primary};\n    color: ${p => p.theme.colors.white};\n  }\n`;\nexport const MovieTitle = styled.h2`\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: 4px;\n  color: ${p => p.theme.colors.text};\n  justify-content: center;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\nexport const Image = styled.img`\n  align-items: center;\n  justify-content: center;\n  display: block;\n  margin: 0 auto;\n\n  height: 380px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from 'components/servises/api';\nimport {\n  Box,\n  Title,\n  MovieList,\n  Item,\n  Link,\n  Image,\n  MovieTitle,\n} from './Home.styled';\n\nconst Home = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fechTrending() {\n      try {\n        const items = await API.trendingToDay();\n        setMovies(items.results);\n      } catch {\n        console.log('error');\n      }\n    }\n    fechTrending();\n  }, []);\n\n  if (!movies) {\n    return;\n  }\n  return (\n    <Box>\n      <Title>Trending today</Title>\n      <MovieList>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <Link to={`movies/${movie.id}`} state={{ from: location }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt=\"\"\n              />\n              <MovieTitle>{movie.title}</MovieTitle>\n            </Link>\n          </Item>\n        ))}\n      </MovieList>\n    </Box>\n  );\n};\nexport default Home;\n"],"names":["API_KEY","axios","trendingToDay","response","data","movieDetails","movieId","searchMovies","search","searchCast","searchReviews","Box","styled","Title","p","theme","fontSizes","l","fontWeights","bold","space","MovieList","Item","Link","NavLink","colors","primary","white","MovieTitle","text","m","Image","location","useLocation","useState","movies","setMovies","useEffect","API","items","results","console","log","fechTrending","map","movie","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}